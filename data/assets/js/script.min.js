let btnClearLog,btnDownloadLog,logContainer;async function init(){cacheElements(),bindEvents(),connectToLiveLogs()}function cacheElements(){btnClearLog=document.getElementById("btn-log-live-clear"),btnDownloadLog=document.getElementById("btn-log-live-download"),logContainer=document.getElementById("container-log-live")}function bindEvents(){btnClearLog.addEventListener("click",clearLogs),btnDownloadLog.addEventListener("click",downloadLogs)}function connectToLiveLogs(){const n=new EventSource("/api/events");n.onopen=function(n){console.log("Connected to live logs."),logContainer.textContent="Connected to live logs. Waiting for updates..."};const e=(new Date).toLocaleTimeString();n.onmessage=function(n){const o=document.createElement("span");o.textContent="["+e+"] - "+n.data,logContainer.appendChild(o),logContainer.scrollTop=logContainer.scrollHeight},n.onerror=function(e){console.error("Error connecting to live logs:",e),n.close(),connectToLiveLogs()}}function deleteDebugLog(){logContainer.textContent=""}function downloadLogs(){const n=logContainer.textContent,e=new Blob([n],{type:"text/plain"}),o=URL.createObjectURL(e),t=document.createElement("a");t.href=o,t.download="live-log.txt",document.body.appendChild(t),t.click(),document.body.removeChild(t),URL.revokeObjectURL(o)}document.addEventListener("DOMContentLoaded",init);