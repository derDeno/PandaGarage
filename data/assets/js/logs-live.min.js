let btnClearLog,btnDownloadLog,logContainer;async function init(){cacheElements(),bindEvents(),connectToLiveLogs()}function cacheElements(){btnClearLog=document.getElementById("btn-log-live-clear"),btnDownloadLog=document.getElementById("btn-log-live-download"),logContainer=document.getElementById("container-log-live")}function bindEvents(){btnClearLog.addEventListener("click",clearLogs),btnDownloadLog.addEventListener("click",downloadLogs)}function connectToLiveLogs(){const e=new EventSource("/api/events");e.addEventListener("open",(function(e){console.log("Connected to live logs."),logContainer.textContent="Connected to live logs. Waiting for updates..."}),!1),e.addEventListener("log",(function(e){const n=(new Date).toLocaleTimeString(),t=document.createElement("div");t.textContent="["+n+"] - "+e.data,logContainer.appendChild(t),logContainer.scrollTop=logContainer.scrollHeight}),!1),e.addEventListener("error",(function(e){setTimeout(connectToLiveLogs,50)}),!1)}function clearLogs(){logContainer.textContent=""}function downloadLogs(){const e=logContainer.textContent,n=new Blob([e],{type:"text/plain"}),t=URL.createObjectURL(n),o=document.createElement("a");o.href=t,o.download="live-log.txt",document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(t)}document.addEventListener("DOMContentLoaded",init);