let onboardingSections,btnOnboard1,btnOnboard2,btnOnboard4,btnScanNetwork,spinnerNetworkScan,networkGroup,networkItemOther,modalNetworkDetails,networkSsid,networkPassphrase,networkConnect,btnModalDetailsClose,modalConnect,msgCheckConnection,msgConnectionFail,msgConnectionSuccess,btnCancel,deviceNetwork,deviceIp,devicePassword,selectLanguage;document.addEventListener("DOMContentLoaded",init);let eventSource=null,selectedNetwork=null;async function init(){cacheElements(),initializeView(),bindEvents(),checkForParam()}function cacheElements(){onboardingSections=[document.getElementById("onboarding-1"),document.getElementById("onboarding-2"),document.getElementById("onboarding-3"),document.getElementById("onboarding-4")],btnOnboard1=document.getElementById("btn-onboard-1"),btnOnboard2=document.getElementById("btn-onboard-2"),btnOnboard4=document.getElementById("btn-onboard-4"),selectLanguage=document.getElementById("pref-device-language"),btnScanNetwork=document.getElementById("btn-scan-networks"),spinnerNetworkScan=document.getElementById("spinner-network-scan"),networkGroup=document.getElementById("network-group"),networkItemOther=document.getElementById("network-item-other"),modalNetworkDetails=document.getElementById("modal-network-details"),networkSsid=document.getElementById("network-ssid"),networkPassphrase=document.getElementById("network-passphrase"),networkConnect=document.getElementById("network-connect"),btnModalDetailsClose=document.getElementById("btn-modal-details-close"),modalConnect=document.getElementById("modal-connect"),msgCheckConnection=document.getElementById("msg-check-connection"),msgConnectionFail=document.getElementById("msg-connection-fail"),msgConnectionSuccess=document.getElementById("msg-connection-success"),btnCancel=document.getElementById("btn-cancel"),deviceNetwork=document.getElementById("device-ssid"),deviceIp=document.getElementById("device-ip"),devicePassword=document.getElementById("device-pwd")}function bindEvents(){btnOnboard1.addEventListener("click",(()=>showOnboardingSection(1))),btnOnboard2.addEventListener("click",handleStep1Submit),btnScanNetwork.addEventListener("click",startNetworkScan),networkItemOther.addEventListener("click",(()=>openNetworkDetailsModal({ssid:"",security:""}))),btnModalDetailsClose.addEventListener("click",closeNetworkDetailsModal),networkConnect.addEventListener("click",handleNetworkConnect),btnCancel.addEventListener("click",(()=>{btnCancel.disabled||closeConnectionModal()})),btnOnboard4.addEventListener("click",handleRestart),selectLanguage.addEventListener("change",(()=>{localStorage.setItem("lang",selectLanguage.value)}))}function initializeView(){onboardingSections.forEach(((e,n)=>e.style.display=0===n?"block":"none")),spinnerNetworkScan.style.display="none",msgConnectionFail.style.display="none",msgConnectionSuccess.style.display="none";const e=document.getElementById("network-item-1");e&&(e.style.display="none"),btnOnboard4.disabled=!0}function checkForParam(){const e=new URL(window.location.href);if(e.searchParams.has("step")){const n=parseInt(e.searchParams.get("step"),10);e.searchParams.delete("step"),window.history.replaceState({},document.title,e.pathname+e.search),showOnboardingSection(n)}}function showOnboardingSection(e){onboardingSections.forEach(((n,t)=>n.style.display=t===e?"block":"none")),1===e&&fetchDeviceName(),3===e&&fetchDeviceInfo()}async function fetchDeviceName(){const e=document.getElementById("pref-onboarding-name");e.value="Loading...",btnOnboard2.disabled=!0;try{const n=await fetch("/api/setup/1"),t=await n.json();e.value=t.name||""}catch(n){console.error("Error fetching device name:",n),e.value="Error loading"}finally{btnOnboard2.disabled=!1}}async function fetchDeviceInfo(){deviceNetwork.textContent=deviceIp.textContent=devicePassword.textContent="Loading...",btnOnboard4.disabled=!0;try{const e=await fetch("/api/setup/3"),n=await e.json();deviceNetwork.textContent=n.ssid||"Unknown",deviceIp.textContent=n.ip||"Unknown",devicePassword.textContent=n.pwd||"Unknown"}catch(e){console.error("Error fetching device info:",e),deviceIp.textContent=devicePassword.textContent="Error loading"}finally{btnOnboard4.disabled=!1}}async function handleStep1Submit(){const e=document.getElementById("pref-onboarding-name");if(e.length<3)return alert("Please enter a valid device name (at least 3 characters)");btnOnboard2.disabled=!0;const n=new URLSearchParams({name:e.value.trim(),lang:selectLanguage.value});try{if(!(await fetch("/api/setup/1",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:n})).ok)return void console.error("Save failed");if(localStorage.setItem("lang",selectLanguage.value),"en"!==selectLanguage.value){const e=new URL(window.location.href);e.searchParams.set("step","2"),window.location.href=e.toString()}else showOnboardingSection(2)}catch(e){console.error("Error saving setp 1 settings:",e)}finally{btnOnboard2.disabled=!1}}async function startNetworkScan(){btnScanNetwork.style.display="none",spinnerNetworkScan.style.display="inline-block",clearNetworkList();try{await fetch("/api/setup/2"),connectToSSE()}catch(e){console.error("Error starting network scan:",e),alert(e),btnScanNetwork.style.display="inline-block",spinnerNetworkScan.style.display="none"}}function clearNetworkList(){networkGroup.querySelectorAll(".list-group-item").forEach((e=>{"network-item-other"!==e.id&&"network-item-1"!==e.id?e.remove():"network-item-1"===e.id&&(e.style.display="none")}))}function connectToSSE(){eventSource&&eventSource.close(),eventSource=new EventSource("/api/network-scan"),eventSource.addEventListener("network-found",(e=>addNetworkToList(JSON.parse(e.data)))),eventSource.addEventListener("scan-finished",(()=>{btnScanNetwork.style.display="inline-block",spinnerNetworkScan.style.display="none",eventSource.close(),eventSource=null})),eventSource.onerror=()=>{console.error("SSE error"),btnScanNetwork.style.display="inline-block",spinnerNetworkScan.style.display="none",eventSource.close(),eventSource=null}}function addNetworkToList(e){const n=document.createElement("li");n.className="list-group-item",n.innerHTML=`<span>${e.ssid} | ${e.rssi} db</span>`,n.dataset.ssid=e.ssid,n.dataset.security=e.encryption||"unknown",n.dataset.bssid=e.bssid||"unknown",n.addEventListener("click",(()=>openNetworkDetailsModal(e))),networkGroup.insertBefore(n,networkItemOther)}function openNetworkDetailsModal(e){selectedNetwork=e,networkSsid.value=e.ssid||"",networkSsid.readOnly=Boolean(e.ssid),networkPassphrase.value="",showModal(modalNetworkDetails)}function closeNetworkDetailsModal(){hideModal(modalNetworkDetails)}function showModal(e){e.classList.add("show"),e.style.display="block",document.body.classList.add("modal-open");const n=document.createElement("div");n.className="modal-backdrop fade show",document.body.appendChild(n)}function hideModal(e){e.classList.remove("show"),e.style.display="none",document.body.classList.remove("modal-open");const n=document.querySelector(".modal-backdrop");n&&n.remove()}async function handleNetworkConnect(){if(!networkSsid.value)return alert("Please enter a network name");closeNetworkDetailsModal(),showModal(modalConnect),resetConnectionStatus();try{await fetch("/api/setup/2",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({ssid:networkSsid.value,pwd:networkPassphrase.value})});const e=await waitForNetworkTest();msgCheckConnection.style.display="none","connected"===e.status?(msgConnectionSuccess.style.display="block",btnCancel.disabled=!1,btnCancel.onclick=()=>{closeConnectionModal(),showOnboardingSection(3)}):(msgConnectionFail.style.display="block",btnCancel.disabled=!1,btnCancel.onclick=closeConnectionModal)}catch(e){console.error("Connection/sse error:",e),msgCheckConnection.style.display="none",msgConnectionFail.style.display="block",btnCancel.disabled=!1,btnCancel.onclick=closeConnectionModal}}function resetConnectionStatus(){msgCheckConnection.style.display="block",msgConnectionSuccess.style.display="none",msgConnectionFail.style.display="none",btnCancel.disabled=!0}function waitForNetworkTest(){return new Promise(((e,n)=>{const t=new EventSource("/api/network-test");t.addEventListener("network-test-result",(n=>{t.close(),e(JSON.parse(n.data))})),t.onerror=()=>{t.close(),n(new Error("SSE test error"))}}))}function closeConnectionModal(){hideModal(modalConnect)}async function handleRestart(){btnOnboard4.disabled=!0,btnOnboard4.textContent="Restarting...";try{await fetch("/api/setup/4",{method:"POST"}),console.log("Device is restarting...")}catch(e){console.error("Error restarting device:",e),btnOnboard4.disabled=!1,btnOnboard4.textContent="Restart now"}}